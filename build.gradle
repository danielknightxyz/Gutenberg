group 'us.sourcefoundry'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'us.sourcefoundry.gutenberg.Main'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.18'
    compile group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.8.9'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'commons-cli', name: 'commons-cli', version:'1.2'
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.13'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'javax.inject', name: 'javax.inject', version:'1'
    compile group: 'com.google.inject', name: 'guice', version:'4.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: "1.16.14"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes ('Main-Class': 'us.sourcefoundry.gutenberg.Main',
                'Implementation-Version': version)
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// This will build and install the compiled project locally.
task install(type: Exec, dependsOn: build){
    commandLine "etc/install.sh"
}

//This will create a zip file for release and distribution through Homebrew.
task brewDist(type: Zip, dependsOn: build) {
    from ('build/libs/')
    include 'gutenberg-*.jar'
    from ('etc/homebrew')
    include 'gutenberg'

    archiveName 'gutenberg-' + version + '.zip'
    destinationDir(file('build/distributions/homebrew'))
}

task getSHA256(type: Exec, dependsOn: brewDist) {
    commandLine 'openssl', 'sha', '-sha256', 'build/distributions/homebrew/gutenberg-' + version + '.zip'
    standardOutput = new ByteArrayOutputStream()
    ext.hash = {
        return standardOutput.toString().trim().reverse().take(64).reverse() //"54cf72d9e441046432f5079535d3909fe5c470d8accd11d92d92bf246a18eaa5"
    }
}

task writeFormula(type: Copy, dependsOn: getSHA256) {
    from 'src/main/resources/homebrew'
    into 'build/distributions/homebrew'
    filter {
        it.replace('${sha256}', tasks.getSHA256.hash() as String)
          .replace('${version}', version as String)
    }
}

writeFormula.mustRunAfter getSHA256